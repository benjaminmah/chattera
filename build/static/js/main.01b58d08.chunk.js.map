{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","useContext","console","log","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","axios","get","headers","process","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","className","onClick","height","projectID","userName","userSecret","offset","Login","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAIaA,G,MAAOC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBACdT,QCRCU,EAAcC,IAAMC,gBAIbC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAEhBC,qBAAU,WACNtB,EAAKuB,oBAAmB,SAACL,GACrBC,EAAQD,GACRD,GAAW,GACRC,GAAME,EAAQI,KAAK,eAE3B,CAACN,EAAME,IAEV,IAAMK,EAAQ,CAAEP,QAEhB,OACI,kBAACR,EAAYgB,SAAb,CAAsBD,MAAOA,IACvBT,GAAWF,I,iDC6DVa,EA9ED,WACV,IAAMP,EAAUC,cACRH,EDJiBU,qBAAWlB,GCI5BQ,KACR,EAA8BH,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACAY,QAAQC,IAAIZ,GAEZ,IAAMa,EAAY,uCAAG,sBAAAC,EAAA,sEACXhC,EAAKiC,UADM,OAEjBb,EAAQI,KAAK,KAFI,2CAAH,qDAKZU,EAAO,uCAAG,WAAOC,GAAP,iBAAAH,EAAA,sEACWI,MAAMD,GADjB,cACNE,EADM,gBAEOA,EAASC,OAFhB,cAENC,EAFM,yBAIL,IAAIC,KAAK,CAACD,GAAO,gBAAiB,CAAEE,KAAM,gBAJrC,2CAAH,sDA4Cb,OArCAnB,qBAAU,WACFJ,EAMJwB,IAAMC,IAAI,qCAAsC,CAC5CC,QAAS,CACL,aAAcC,uCACd,YAAa3B,EAAK4B,MAClB,cAAe5B,EAAK6B,OAG3BC,MAAK,WACF/B,GAAW,MAEdgC,OAAM,WACH,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASlC,EAAK4B,OAC9BI,EAASE,OAAO,WAAYlC,EAAK4B,OACjCI,EAASE,OAAO,SAAUlC,EAAK6B,KAE/Bb,EAAQhB,EAAKmC,UACRL,MAAK,SAACM,GACHJ,EAASE,OAAO,SAAUE,EAAQA,EAAOC,MAEzCb,IAAMc,KAAK,kCACPN,EACA,CAAEN,QAAS,CAAE,cAAeC,0CAE/BG,MAAK,kBAAM/B,GAAW,MACtBgC,OAAM,SAACQ,GAAD,OAAW5B,QAAQC,IAAI2B,YA9BtCrC,EAAQI,KAAK,OAiClB,CAACN,EAAME,KAENF,GAAQF,EAAgB,aAExB,yBAAK0C,UAAU,cACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,YAAf,YAGA,yBAAKC,QAAS5B,EAAc2B,UAAU,cAAtC,WAKJ,kBAAC,IAAD,CACIE,OAAO,qBACPC,UAAWhB,uCACXiB,SAAU5C,EAAK4B,MACfiB,WAAY7C,EAAK6B,IACjBiB,QAAS,M,SC7CVC,EA5BD,WACV,OACI,yBAAKC,GAAG,cACJ,yBAAKA,GAAG,cACJ,oDAEA,yBACIR,UAAU,sBACVC,QAAS,kBAAM3D,EAAKmE,mBAAmB,IAAIlE,IAASD,KAAKoE,sBAEzD,kBAACC,EAAA,EAAD,MAJJ,wBAOA,6BAVJ,IAUU,gCCIPC,MAff,WACE,OACE,yBAAKC,MAAO,CAAEC,WAAY,WACxB,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW/C,IAChC,kBAAC,IAAD,CAAO8C,KAAK,IAAIC,UAAWT,SCXvCU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.01b58d08.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const auth = firebase.initializeApp({\n    apiKey: \"AIzaSyDNbTs0qewg2vkfM0gf8b8-I5UbKaabxr0\",\n    authDomain: \"heychat-0.firebaseapp.com\",\n    projectId: \"heychat-0\",\n    storageBucket: \"heychat-0.appspot.com\",\n    messagingSenderId: \"383835837038\",\n    appId: \"1:383835837038:web:1fb981ede53d4337f50c7f\",\n    measurementId: \"G-HFD11MCMC3\"\n  }).auth();","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            setUser(user);\n            setLoading(false);\n            if(user) history.push('/chats');\n        })\n    }, [user, history]);\n\n    const value = { user };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","import React, { useRef, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ChatEngine } from 'react-chat-engine';\nimport { auth } from \"../firebase\";\n\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\n\nconst Chats = () => {\n    const history = useHistory();\n    const { user } = useAuth();\n    const [loading, setLoading] = useState(true);\n    console.log(user);\n\n    const handleLogout = async () => {\n        await auth.signOut();\n        history.push('/')\n    }\n\n    const getFile = async (url) => {\n        const response = await fetch(url);\n        const data = await response.blob();\n\n        return new File([data], \"userPhoto.jpg\", { type: 'image/jpeg' })\n    }\n\n    useEffect(() => {\n        if(!user) {\n            history.push('/');\n\n            return;\n        }\n\n        axios.get('https://api.chatengine.io/users/me', {\n            headers: {\n                \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\n                \"user-name\": user.email,\n                \"user-secret\": user.uid,\n            }\n        })\n        .then(() => {\n            setLoading(false);\n        })\n        .catch(() => {\n            let formdata = new FormData();\n            formdata.append('email', user.email);\n            formdata.append('username', user.email);\n            formdata.append('secret', user.uid);\n\n            getFile(user.photoURL)\n                .then((avatar) => {\n                    formdata.append('avatar', avatar, avatar.name)\n\n                    axios.post('https://api.chatengine.io/users',\n                        formdata,\n                        { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY}}\n                    )\n                    .then(() => setLoading(false))\n                    .catch((error) => console.log(error))\n                })\n        })\n    }, [user, history])\n\n    if(!user || loading) return 'Loading...';\n    return (\n        <div className=\"chats-page\">\n            <div className=\"nav-bar\">\n                <div className=\"logo-tab\">\n                    Chattera\n                </div>\n                <div onClick={handleLogout} className=\"logout-tab\">\n                    Logout\n                </div>\n            </div>\n\n            <ChatEngine\n                height=\"calc(100vh - 66px)\"\n                projectID={process.env.REACT_APP_CHAT_ENGINE_ID}\n                userName={user.email}\n                userSecret={user.uid}\n                offset={-4}\n            />\n        </div>\n    )\n}\n\nexport default Chats;","import React from 'react';\nimport { GoogleOutlined/*, FacebookOutlined */} from '@ant-design/icons';\nimport \"firebase/app\";\n\nimport { auth } from '../firebase';\nimport firebase from 'firebase/app';\n\nconst Login = () => {\n    return(\n        <div id=\"login-page\"> \n            <div id=\"login-card\">\n                <h2>Welcome to Chattera!</h2>\n\n                <div\n                    className=\"login-button google\"\n                    onClick={() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}\n                >\n                    <GoogleOutlined /> Sign in with Google\n                </div>\n\n                <br/> <br/>\n                \n\n                {/*<div\n                    className=\"login-button facebook\"\n                >\n                    <FacebookOutlined /> Sign in with Facebook\n                </div>\n    */}\n            </div>\n        </div>\n    );\n\n}\n\nexport default Login;","import React from \"react\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport { AuthProvider } from \"../contexts/AuthContext\"\n\nimport Chats from \"./Chats\"\nimport Login from \"./Login\"\n\nfunction App() {\n  return (\n    <div style={{ fontFamily: 'Avenir' }}>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chats\" component={Chats} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}